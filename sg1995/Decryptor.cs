using System;
using System.Linq;
using System.Text;
using System.IO;

public class Program
{
    public static void Main()
    {
        if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\read.txt"))
        {
			string rc4dec_key;
			string wind_txt = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\read.txt";
			var fileInfo = new FileInfo(wind_txt);
			using (var stream = File.OpenRead(wind_txt))
			{
				stream.Seek(fileInfo.Length - 6, SeekOrigin.Begin);
				using (var textReader = new StreamReader(stream))
				{
					rc4dec_key = textReader.ReadToEnd();
				}
			}

            Decryptor(Encoding.ASCII.GetBytes(rc4dec_key));
        }
        else
        {
			Console.WriteLine("Please Enter your key");
			string its_key = Console.ReadLine();
			byte[] rc4_key = Encoding.ASCII.GetBytes(its_key);
			Decryptor(rc4_key);
		}
    }
    public static void Decryptor(byte[] rc_key)
    {
		Console.WriteLine("Decryption Started.......");
        foreach (string text in Directory.GetFiles(Environment.CurrentDirectory))
        {
			Console.WriteLine(text);
            bool flag = text.Contains("SG1995");
			if(flag)
            {
				string extension = Path.GetExtension(text);
				string result = text.Substring(0, text.Length - extension.Length);
				byte[] enc_data = File.ReadAllBytes(text);
				File.Delete(text);
				byte[] dec_data = rc4_dec(rc_key, enc_data);
				File.WriteAllBytes(result, dec_data);

			}
        }


    }
	public static byte[] rc4_dec(byte[] x0x0x0, byte[] TRRTERT)
	{
		int[] array = new int[256];
		int[] array2 = new int[256];
		byte[] array3 = new byte[TRRTERT.Length];
		int i;
		for (i = 0; i < 256; i++)
		{
			array[i] = (int)x0x0x0[i % x0x0x0.Length];
			array2[i] = i;
		}
		int num;
		for (i = (num = 0); i < 256; i++)
		{
			num = (num + array2[i] + array[i]) % 256;
			int num2 = array2[i];
			array2[i] = array2[num];
			array2[num] = num2;
		}
		int num3;
		num = (num3 = (i = 0));
		while (i < TRRTERT.Length)
		{
			num3++;
			num3 %= 256;
			num += array2[num3];
			num %= 256;
			int num2 = array2[num3];
			array2[num3] = array2[num];
			array2[num] = num2;
			int num4 = array2[(array2[num3] + array2[num]) % 256];
			array3[i] = (byte)((int)TRRTERT[i] ^ num4);
			i++;
		}
		return array3;
	}
}
